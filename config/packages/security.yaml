security:
    encoders:
        App\Entity\User:
            algorithm: argon2i

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            guard:
                authenticators:
                    - App\Security\UserAuthenticator
            remember-me:
                secret: '%kernel.secret%'
                lifetime: 31536000
                path: /
                remember-me-parameter: _remember_me
            logout:
                path: app_logout

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # access control is managed by annotations either on classes or on functions.
        # => every controller class is annoted except SecurityController because
        # it contains functions destined to non-ROLE_USER-granted users (ex : login and reset password)
#         - { path: ^/public, roles: ROLE_USER }
#         - { path: ^/public, roles: ROLE_FORBIDDEN }
#         - { path: ^/mon-profil, roles: ROLE_USER }
#         - { path: ^/cr√©er-une-sortie, roles: ROLE_USER }
